#!/usr/bin/env ruby
# Extract Reasonable Developer Time Records from a GIT Repository's Commit Log
#
# This is inspired by a RAKE task publicly posted by Sharad at 
# http://www.tatvartha.com/2010/01/generating-time-entry-from-git-log/. 
# However, it has been adapted to run without Rails from the command line.
#
# Portions (C) 2012 Rietta Inc. and licensed under the terms of the BSD license.

  # Adjust path in case called directly and not through gem
  $:.unshift "#{File.expand_path(File.dirname(__FILE__))}/../lib"

  require 'optparse'
  require 'git_time_extractor'


  options = { :project => '',
              :path_to_repo => Dir.pwd,
              :output_file => '-',
              :max_commits => 1000,
              :initial_effort_mins => 30,
              :merge_effort_mins => 30,
              :session_duration_hrs => 3
  }
  
  valid_usage = false
  
  option_parser = OptionParser.new do |opts|
    opts.on('-p PROJECT', '--project PROJECT') do |project|
       options[:project] = project
    end
    
    opts.on('-i REPOPATH', '--repo-path REPOPATH') do |repopath|
       options[:path_to_repo] = repopath
    end
    
    opts.on('-o OUTPUT_CSV', '--out OUTPUT_CSV') do |output_file|
       options[:output_file] = output_file
    end

    opts.on('-c MAX_COMMITS', '--max-commits MAX_COMMITS',
            'Maximum number of commits to read from Git. Default: ' + options[:max_commits].to_s ) do |max_commits|
      options[:max_commits] = max_commits
    end

    opts.on('-e INITIAL_EFFORT', '--initial-effort INITIAL_EFFORT',
            'Initial Effort before each commit, in minutes. Default: ' + options[:initial_effort_mins].to_s ) do |initial_effort|
      options[:initial_effort_mins] = initial_effort
    end

    opts.on('-m MERGE_EFFORT', '--merge-effort MERGE_EFFORT',
            'Effort spent merging, in minutes. Default: ' + options[:merge_effort_mins].to_s) do |initial_effort|
      options[:initial_effort_mins] = initial_effort
    end

    opts.on('-s SESSION_DURATION', '--session-duration SESSION_DURATION',
            'Session duration, in hours. Default: ' + options[:session_duration_hrs].to_s ) do |session_duration|
      options[:session_duration_hrs] = session_duration
    end
  end
  
  option_parser.parse!

  if options[:project] && options[:path_to_repo] && options[:output_file]
    extractor = GitTimeExtractor.new(options)
    rows = extractor.process_git_log_into_time
    if options[:output_file] == '-'
      rows.each do |row|
        puts row.map!{|value| '"' + value.to_s.gsub('"', '\"').gsub("\n", '\n') + '"'}.join(',')
      end
    else
      puts 'Output to file not implemented yet'
    end

  else
    puts 'Usage: git_time_extractor -p PROJECT_NAME -i [PATH_TO_REPO] -o [OUTPUT_FILE] -c [MAX_COMMITS] -e [INITIAL_EFFORT_MINS] -m [MERGE_EFFORT_MINS] -s [SESSION_DURATION_HRS]'
    puts 'Copyright 2014 Rietta Inc. http://www.rietta.com'
    exit 0
  end

